Arquivos de texto plano X Arquivos de processador de texto
Existem diferencas importantes entre o arquivos de texto plano (ou puro) criados por um editor de texto e arquivos de documento criado por processadores de texto como o Microsoft Word,[2] WordPerfect,[3] ou OpenOffice.org.[4] Resumidamente:

Um arquivo de texto puro e representado e editado, mostrando todos os caracteres que estao presentes no arquivo. Os caracteres somente utilizados por 'mark-up' sao os usados caractere de controle e codificacao de caracteres, na pratica seriam: nova linha, tabulacao e formfeed. A codificacao de caracteres mais comumente utilizada e ASCII, sobretudo recentemente, como arquivos de texto plano sao mais utilizados para a programacao e configuracao, menos freqüentemente utilizados para documentacao do que no passado.
Os documentos criados por um processador de texto geralmente contem arquivo de formato especificos para caractere de controle alem do que esta definido no conjunto de caracteres. Estes permitem funcoes como negrito, italico, fontes, colunas, tabelas, etc. Esses e outros simbolos comuns de formatacao eram associados apenas a editoracao eletrônica, mas agora sao comuns em simples processadores.
Historia

Uma caixa de cartoes perfurados com o programas de varias plataformas.
Antes existiam editores de texto, texto de computador eram feitos em cartoes perfurados com maquinas de perfuracao. O texto foi desenvolvido como uma caixa fisica destes cartoes de papelao fino, a leitura e realizada no leitor de cartao.

Os editores de texto de primeira linha foram orientados sobre os terminais estilo maquina de escrever, e eles nao fornecem uma janela ou tela de visualizacao orientada. Eles costumam ter comandos muito curto (para minimizar a digitacao) que reproduziam a linha atual. Entre eles havia um comando para imprimir uma secao selecionada (s) do arquivo na maquina de escrever (ou impressora) em caso de necessidade. Um "cursor de edicao" imaginaria um ponto de insercao, poderia ser movido por comandos especiais que operavam com os numeros de linha de seqüencias de texto especificos de cadeia de caracteres (contexto). Posteriormente, as seqüencias de contexto, foram estendidos para expressoes regulares. Para ver as alteracoes, era necessario ser impresso o arquivo na impressora. Estas "linha-base editores de texto" foram consideradas revolucionarias as melhorias sobre maquinas de perfurar. Na maquina de escrever caso terminais baseados nao estavam disponiveis, elas foram adaptadas para perfurar equipamento. Neste caso, o usuario precisava perfurar os comandos para a plataforma separada de cartoes e fornecer-los no computador para editar o arquivo.

Quando os terminais de computador com telas de video tornaram disponiveis, tela de editores de texto base se tornou comum. Um dos primeiros "full screen" editores foi O26 - o que foi escrito para o operar no console das maquinas CDC 6000 da serie 1967. Outro editor de tela cheia e o vi. Escrito na decada de 1970, vi ainda e um editor padrao para o Unix e sistemas operacionais Linux. A produtividade da edicao completa usando editores de tela (em relacao a linha-base editores) motivou muitas das compras iniciais de terminais de video.

Tipos de editores de texto
Alguns editores de texto sao pequenos e simples, enquanto outros oferecem uma ampla e complexa gama de funcionalidade. Por exemplo, Unix e sistemas operacionais Unix-like tem o editor vi (ou uma variante), mas muitos tambem incluem o editor Emacs.[5] Sistemas Microsoft Windows vem com o Bloco de notas muito simples, embora muitas pessoas, especialmente programadores preferem usar um dos muitos outros editores de texto do Windows com mais recursos. O Macintosh da Apple Inc. com seu classico Mac OS tinha um editor nativo o SimpleText, que foi substituido no OSX pelo TextEdit. Alguns editores, como o WordStar, tem modos de operacao dual permitindo-lhes ser um editor de texto ou um processador de texto e seguido pelo WordPerfect que foi o mais completo ate a chegada dos mais atuais.

Editores de texto orientados para usuarios profissionais nao tem limite no tamanho do arquivo a ser aberto. Em particular, eles comecam rapidamente, mesmo quando a edicao de arquivos grandes, e sao capazes de editar arquivos que sao demasiado grandes para caber na memoria principal do computador. Editores de texto mais simples, muitas vezes leem arquivos em uma matriz na memoria RAM. Em arquivos maiores e um processo lento, e arquivos muito grandes, muitas vezes nao se ajustam.

A capacidade de ler e escrever arquivos muito grande e necessario por muitos usuarios profissionais. Por exemplo, administradores de sistema pode precisar ler arquivos de log extensos. Os programadores podem precisar alterar grandes arquivos codigo fonte, ou analisar textos imensamente grandes, como um dicionario inteiro colocado em um unico arquivo.

Alguns editores de texto sao especializados em linguagens de computador para edicao personalizada (editores de programacao). Por exemplo, os Emacs pode ser personalizado para programacao em Lisp. Estes geralmente permitem que o editor simule as combinacoes de teclas e as caracteristicas de outros editores, para que os usuarios nao tem que aprender as combinacoes nativas de comandos.

Outro importante grupo de editores de programacao usa o REXX um linguagem de script. Estes editores permitem que entram os dois comandos e declaracoes REXX diretamente na linha de comando na parte inferior da tela (pode ser escondido e ativado por uma combinacao de teclas). Estes editores sao geralmente referidos como "editores ortodoxos", a maioria dos representantes desta classe sao derivados de Xedit, editor da IBM para VM/CMS. Entre eles estao: THE, Kedit, SlickEdit, X2, Uni-edit, UltraEdit, e Sedit. Alguns derivados do vi, como o Vim tambem flexivel com suporte as linguagens de macro, e tem uma linha de comando na parte inferior para a introducao de comandos. Eles podem ser considerados um outro ramo da familia de editores ortodoxos.

Muitos editores de texto para desenvolvedores de software incluem a realce de sintaxe destacando codigo fonte e automatica complementacao para fazer programas mais faceis de ler e escrever. Editores de programacao, muitas vezes permite selecionar o nome de um subprograma ou variavel, e depois saltar para a sua definicao e para tras. Muitas vezes, um utilitario como auxiliar ctags e usado para localizar as definicoes.
